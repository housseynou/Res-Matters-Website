{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getVisibleItemCount = exports.getIndexToScrollTo = exports.isNextButtonVisible = exports.isPrevButtonVisible = exports.getMaximumAccomodableItemCount = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _range = require('range');\n\nvar _debounce = require('debounce');\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\n\n\nvar getMaximumAccomodableItemCount = exports.getMaximumAccomodableItemCount = function getMaximumAccomodableItemCount(fullWidth, elementWidth, elementMargin) {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nvar isPrevButtonVisible = exports.isPrevButtonVisible = function isPrevButtonVisible(firstVisibleIndex) {\n  return firstVisibleIndex > 0;\n};\n\nvar isNextButtonVisible = exports.isNextButtonVisible = function isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount) {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nvar getIndexToScrollTo = exports.getIndexToScrollTo = function getIndexToScrollTo(direction, totalItems, visibleItemCount, firstVisibleIndex, scrollStepDistance) {\n  var index = void 0;\n  var itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  var itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nvar getVisibleItemCount = exports.getVisibleItemCount = function getVisibleItemCount(totalItems, firstVisibleIndex, itemWidth, itemMargin, controlWidth, maxWidth) {\n  var availableWidth = void 0;\n  var visibleItemCount = void 0;\n  availableWidth = maxWidth + itemMargin;\n  var prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  var nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\nvar Carousel = function (_Component) {\n  _inherits(Carousel, _Component);\n\n  function Carousel(props) {\n    _classCallCheck(this, Carousel);\n\n    var _this = _possibleConstructorReturn(this, (Carousel.__proto__ || Object.getPrototypeOf(Carousel)).call(this, props));\n\n    _this.handleScrollToDirection = function (direction, visibleItemCount) {\n      var index = getIndexToScrollTo(direction, _this.props.children.length, visibleItemCount, _this.state.firstVisibleIndex, _this.props.scrollStepDistance || visibleItemCount);\n\n      _this.props.onItemScroll(index);\n\n      _this.setState({\n        firstVisibleIndex: index\n      });\n    };\n\n    _this.getItemElement = function (item, key, index, visibleItemCount) {\n      var visibleItemIndeces = (0, _range.range)(_this.state.firstVisibleIndex, visibleItemCount + _this.state.firstVisibleIndex);\n      var isVisible = visibleItemIndeces.includes(index);\n      var isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n      if (!isVisible) {\n        return null;\n      }\n\n      return _react2.default.createElement('li', {\n        key: key,\n        style: {\n          boxSizing: 'border-box',\n          display: 'flex',\n          listStyleType: 'none',\n          marginRight: isLastAmongVisible ? 0 : _this.props.itemMargin,\n          width: _this.props.itemWidth\n        }\n      }, item);\n    };\n\n    _this.captureWrapperElementReference = function (element) {\n      if (element) {\n        _this.wrapperElement = element;\n      }\n    };\n\n    _this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n    _this.resizeEventListener = (0, _debounce2.default)(function () {\n      _this.setState({\n        maxWidth: _this.wrapperElement.offsetWidth\n      });\n    }, 100);\n    return _this;\n  }\n\n  _createClass(Carousel, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (!this.wrapperElement) {\n        throw new Error('Unexpected state.');\n      }\n\n      var maxWidth = this.wrapperElement.offsetWidth;\n      this.setState({\n        maxWidth: maxWidth\n      });\n      window.addEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.resizeEventListener.clear();\n      window.removeEventListener('resize', this.resizeEventListener);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          controlWidth = _props.controlWidth,\n          itemMargin = _props.itemMargin,\n          children = _props.children,\n          itemWidth = _props.itemWidth;\n      var items = children;\n      var itemCount = items.length;\n      var visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n      var prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n      var nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n      var carouselStyle = _extends({\n        boxSizing: 'border-box',\n        display: 'flex',\n        flexFlow: 'row wrap',\n        flexGrow: 1,\n        overflow: 'hidden'\n      }, this.props.style);\n\n      var navigationButtonStyle = {\n        boxSizing: 'border-box',\n        height: 'inherit',\n        margin: 0,\n        padding: 0,\n        width: controlWidth\n      };\n\n      var navigationButtonPreviousStyle = _extends({}, navigationButtonStyle, {\n        display: prevButtonVisible ? 'flex' : 'none'\n      });\n\n      var navigationButtonNextStyle = _extends({}, navigationButtonStyle, {\n        display: nextButtonVisible ? 'flex' : 'none'\n      });\n\n      var bodyStyle = {\n        display: 'flex',\n        flexFlow: 'row wrap',\n        margin: 0,\n        padding: 0\n      };\n      return _react2.default.createElement('div', {\n        className: 'react-carousel',\n        ref: this.captureWrapperElementReference,\n        style: carouselStyle\n      }, _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--previous',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('previous', visibleItemCount);\n        },\n        style: navigationButtonPreviousStyle\n      }), _react2.default.createElement('ul', {\n        style: bodyStyle\n      }, items.map(function (item, index) {\n        if (!item.key) {\n          throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n        }\n\n        return _this2.getItemElement(item, item.key, index, visibleItemCount);\n      })), _react2.default.createElement('div', {\n        className: 'react-carousel__navigation-button react-carousel__navigation-button--next',\n        onClick: function onClick() {\n          _this2.handleScrollToDirection('next', visibleItemCount);\n        },\n        style: navigationButtonNextStyle\n      }));\n    }\n  }]);\n\n  return Carousel;\n}(_react.Component);\n\nCarousel.defaultProps = {\n  controlWidth: 30,\n  firstVisibleIndex: 0,\n  itemMargin: 0,\n  itemWidth: 50,\n  onItemScroll: function onItemScroll() {},\n  scrollStepDistance: null\n};\nexports.default = Carousel;","map":{"version":3,"sources":["../src/Carousel.js"],"names":["getMaximumAccomodableItemCount","Math","fullWidth","elementWidth","isPrevButtonVisible","firstVisibleIndex","isNextButtonVisible","totalItems","getIndexToScrollTo","index","itemsBeyondVisible","itemsBehindVisible","direction","getVisibleItemCount","availableWidth","visibleItemCount","maxWidth","prevButtonVisible","nextButtonVisible","Carousel","defaultProps","controlWidth","itemMargin","itemWidth","onItemScroll","scrollStepDistance","props","offsetWidth","window","visibleItemIndeces","isVisible","isLastAmongVisible","boxSizing","display","listStyleType","marginRight","width","item","children","items","itemCount","flexFlow","flexGrow","overflow","navigationButtonStyle","height","margin","padding","bodyStyle","carouselStyle","navigationButtonPreviousStyle","navigationButtonNextStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AAGA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAGA,IAAA,SAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;;;;;AAIO,IAAMA,8BAAAA,GAAAA,OAAAA,CAAAA,8BAAAA,GAAiC,SAAjCA,8BAAiC,CAAA,SAAA,EAAA,YAAA,EAAA,aAAA,EAA4E;AACxH,SAAOC,IAAAA,CAAAA,KAAAA,CAAWC,SAAAA,IAAaC,YAAAA,GAA/B,aAAkBD,CAAXD,CAAP;AADK,CAAA;;AAIA,IAAMG,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,SAAtBA,mBAAsB,CAAA,iBAAA,EAAwC;AACzE,SAAOC,iBAAAA,GAAP,CAAA;AADK,CAAA;;AAIA,IAAMC,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,SAAtBA,mBAAsB,CAAA,UAAA,EAAA,iBAAA,EAAA,gBAAA,EAAsF;AACvH,SAAOD,iBAAAA,GAAoBE,UAAAA,GAA3B,gBAAA;AADK,CAAA;;AAIA,IAAMC,kBAAAA,GAAAA,OAAAA,CAAAA,kBAAAA,GAAqB,SAArBA,kBAAqB,CAAA,SAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,kBAAA,EAMrB;AACX,MAAIC,KAAAA,GAAAA,KAAJ,CAAA;AAEA,MAAMC,kBAAAA,GAAqBH,UAAAA,GAAAA,iBAAAA,GAA3B,gBAAA;AACA,MAAMI,kBAAAA,GAAN,iBAAA;;AAEA,MAAIC,SAAAA,KAAJ,MAAA,EAA0B;AACxBH,IAAAA,KAAAA,GAAQJ,iBAAAA,IAAqBK,kBAAAA,GAAAA,kBAAAA,GAAAA,kBAAAA,GAA7BD,kBAAQJ,CAARI;AADF,GAAA,MAEO,IAAIG,SAAAA,KAAJ,UAAA,EAA8B;AACnCH,IAAAA,KAAAA,GAAQJ,iBAAAA,IAAqBM,kBAAAA,GAAAA,kBAAAA,GAAAA,kBAAAA,GAA7BF,kBAAQJ,CAARI;AADK,GAAA,MAEA;AACL,UAAM,IAAA,KAAA,CAAN,mBAAM,CAAN;AACD;;AAED,SAAA,KAAA;AApBK,CAAA;;AAuBA,IAAMI,mBAAAA,GAAAA,OAAAA,CAAAA,mBAAAA,GAAsB,SAAtBA,mBAAsB,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,QAAA,EAO9B;AACH,MAAIC,cAAAA,GAAAA,KAAJ,CAAA;AACA,MAAIC,gBAAAA,GAAAA,KAAJ,CAAA;AAEAD,EAAAA,cAAAA,GAAiBE,QAAAA,GAAjBF,UAAAA;AAEA,MAAMG,iBAAAA,GAAoBb,mBAAAA,CAA1B,iBAA0BA,CAA1B;;AAEA,MAAA,iBAAA,EAAuB;AACrBU,IAAAA,cAAAA,IAAAA,YAAAA;AACD;;AAEDC,EAAAA,gBAAAA,GAAmBf,8BAAAA,CAAAA,cAAAA,EAAAA,SAAAA,EAAnBe,UAAmBf,CAAnBe;AAEA,MAAMG,iBAAAA,GAAoBZ,mBAAAA,CAAAA,UAAAA,EAAAA,iBAAAA,EAA1B,gBAA0BA,CAA1B;;AAEA,MAAA,iBAAA,EAAuB;AACrBQ,IAAAA,cAAAA,IAAAA,YAAAA;AAEAC,IAAAA,gBAAAA,GAAmBf,8BAAAA,CAAAA,cAAAA,EAAAA,SAAAA,EAAnBe,UAAmBf,CAAnBe;AACD;;AAED,SAAA,gBAAA;AA7BK,CAAA;;IA6CDI,Q;;;AAaJ,WAAA,QAAA,CAAA,KAAA,EAA+B;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA;;AAAA,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,QAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,QAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,KAAA,CAAA,uBAAA,GAmCL,UAAA,SAAA,EAAA,gBAAA,EAA8D;AACtF,UAAMV,KAAAA,GAAQD,kBAAAA,CAAAA,SAAAA,EAEZ,KAAA,CAAA,KAAA,CAAA,QAAA,CAFYA,MAAAA,EAAAA,gBAAAA,EAIZ,KAAA,CAAA,KAAA,CAJYA,iBAAAA,EAKZ,KAAA,CAAA,KAAA,CAAA,kBAAA,IALF,gBAAcA,CAAd;;AAQA,MAAA,KAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA;;AAEA,MAAA,KAAA,CAAA,QAAA,CAAc;AACZH,QAAAA,iBAAAA,EAAmBI;AADP,OAAd;AA9C6B,KAAA;;AAAA,IAAA,KAAA,CAAA,cAAA,GAmDd,UAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,gBAAA,EAA+G;AAC9H,UAAMoB,kBAAAA,GAAqB,CAAA,GAAA,MAAA,CAAA,KAAA,EAAM,KAAA,CAAA,KAAA,CAAN,iBAAA,EAAoCd,gBAAAA,GAAmB,KAAA,CAAA,KAAA,CAAlF,iBAA2B,CAA3B;AACA,UAAMe,SAAAA,GAAYD,kBAAAA,CAAAA,QAAAA,CAAlB,KAAkBA,CAAlB;AACA,UAAME,kBAAAA,GAAqBF,kBAAAA,CAAAA,MAAAA,KAA8BA,kBAAAA,CAAAA,OAAAA,CAAAA,KAAAA,IAAzD,CAAA;;AAEA,UAAI,CAAJ,SAAA,EAAgB;AACd,eAAA,IAAA;AACD;;AAED,aAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AACL,QAAA,GAAA,EADK,GAAA;AAEL,QAAA,KAAA,EAAO;AACLG,UAAAA,SAAAA,EADK,YAAA;AAELC,UAAAA,OAAAA,EAFK,MAAA;AAGLC,UAAAA,aAAAA,EAHK,MAAA;AAILC,UAAAA,WAAAA,EAAaJ,kBAAAA,GAAAA,CAAAA,GAAyB,KAAA,CAAA,KAAA,CAJjC,UAAA;AAKLK,UAAAA,KAAAA,EAAO,KAAA,CAAA,KAAA,CAAWb;AALb;AAFF,OAAA,EAUJc,IAVI,CAAP;AA5D6B,KAAA;;AAAA,IAAA,KAAA,CAAA,8BAAA,GA0EE,UAAA,OAAA,EAAgB;AAC/C,UAAA,OAAA,EAAa;AACX,QAAA,KAAA,CAAA,cAAA,GAAA,OAAA;AACD;AA7E4B,KAAA;;AAG7B,IAAA,KAAA,CAAA,KAAA,GAAa;AACXhC,MAAAA,iBAAAA,EAAmBqB,KAAAA,CAAAA,iBAAAA,IADR,CAAA;AAEXV,MAAAA,QAAAA,EAAU;AAFC,KAAb;AAKA,IAAA,KAAA,CAAA,mBAAA,GAA2B,CAAA,GAAA,UAAA,CAAA,OAAA,EAAS,YAAM;AACxC,MAAA,KAAA,CAAA,QAAA,CAAc;AACZA,QAAAA,QAAAA,EAAU,KAAA,CAAA,cAAA,CAAoBW;AADlB,OAAd;AADyB,KAAA,EAA3B,GAA2B,CAA3B;AAR6B,WAAA,KAAA;AAa9B;;;;wCAEoB;AACnB,UAAI,CAAC,KAAL,cAAA,EAA0B;AACxB,cAAM,IAAA,KAAA,CAAN,mBAAM,CAAN;AACD;;AAED,UAAMX,QAAAA,GAAW,KAAA,cAAA,CAAjB,WAAA;AAEA,WAAA,QAAA,CAAc;AACZA,QAAAA,QAAAA,EAAAA;AADY,OAAd;AAIAY,MAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAkC,KAAlCA,mBAAAA;AACD;;;2CAEuB;AACtB,WAAA,mBAAA,CAAA,KAAA;AAEAA,MAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,QAAAA,EAAqC,KAArCA,mBAAAA;AACD;;;6BA+CS;AAAA,UAAA,MAAA,GAAA,IAAA;;AAAA,UAAA,MAAA,GAMJ,KANI,KAAA;AAAA,UAENP,YAFM,GAAA,MAAA,CAAA,YAAA;AAAA,UAGNC,UAHM,GAAA,MAAA,CAAA,UAAA;AAAA,UAINgB,QAJM,GAAA,MAAA,CAAA,QAAA;AAAA,UAKNf,SALM,GAAA,MAAA,CAAA,SAAA;AAOR,UAAMgB,KAAAA,GAAN,QAAA;AACA,UAAMC,SAAAA,GAAYD,KAAAA,CAAlB,MAAA;AACA,UAAMxB,gBAAAA,GAAmBF,mBAAAA,CAAAA,SAAAA,EAA+B,KAAA,KAAA,CAA/BA,iBAAAA,EAAAA,SAAAA,EAAAA,UAAAA,EAAAA,YAAAA,EAAkG,KAAA,KAAA,CAA3H,QAAyBA,CAAzB;AACA,UAAMI,iBAAAA,GAAoBF,gBAAAA,KAAAA,CAAAA,GAAAA,KAAAA,GAAiCX,mBAAAA,CAAoB,KAAA,KAAA,CAA/E,iBAA2DA,CAA3D;AACA,UAAMc,iBAAAA,GAAoBH,gBAAAA,KAAAA,CAAAA,GAAAA,KAAAA,GAAiCT,mBAAAA,CAAAA,SAAAA,EAA+B,KAAA,KAAA,CAA/BA,iBAAAA,EAA3D,gBAA2DA,CAA3D;;AAEA,UAAM,aAAA,GAAA,QAAA,CAAA;AACJ0B,QAAAA,SAAAA,EADI,YAAA;AAEJC,QAAAA,OAAAA,EAFI,MAAA;AAGJQ,QAAAA,QAAAA,EAHI,UAAA;AAIJC,QAAAA,QAAAA,EAJI,CAAA;AAKJC,QAAAA,QAAAA,EAAU;AALN,OAAA,EAMD,KAAA,KAAA,CANL,KAAM,CAAN;;AASA,UAAMC,qBAAAA,GAAwB;AAC5BZ,QAAAA,SAAAA,EAD4B,YAAA;AAE5Ba,QAAAA,MAAAA,EAF4B,SAAA;AAG5BC,QAAAA,MAAAA,EAH4B,CAAA;AAI5BC,QAAAA,OAAAA,EAJ4B,CAAA;AAK5BX,QAAAA,KAAAA,EAAOf;AALqB,OAA9B;;AAQA,UAAM,6BAAA,GAAA,QAAA,CAAA,EAAA,EAAA,qBAAA,EAAA;AAEJY,QAAAA,OAAAA,EAAShB,iBAAAA,GAAAA,MAAAA,GAA6B;AAFlC,OAAA,CAAN;;AAKA,UAAM,yBAAA,GAAA,QAAA,CAAA,EAAA,EAAA,qBAAA,EAAA;AAEJgB,QAAAA,OAAAA,EAASf,iBAAAA,GAAAA,MAAAA,GAA6B;AAFlC,OAAA,CAAN;;AAKA,UAAM8B,SAAAA,GAAY;AAChBf,QAAAA,OAAAA,EADgB,MAAA;AAEhBQ,QAAAA,QAAAA,EAFgB,UAAA;AAGhBK,QAAAA,MAAAA,EAHgB,CAAA;AAIhBC,QAAAA,OAAAA,EAAS;AAJO,OAAlB;AAOA,aAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACL,QAAA,SAAA,EADK,gBAAA;AAEL,QAAA,GAAA,EAAK,KAFA,8BAAA;AAGL,QAAA,KAAA,EAAOE;AAHF,OAAA,EAKL,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAA,EADF,+EAAA;AAEE,QAAA,OAAA,EAAS,SAAA,OAAA,GAAM;AACb,UAAA,MAAA,CAAA,uBAAA,CAAA,UAAA,EAAA,gBAAA;AAHJ,SAAA;AAKE,QAAA,KAAA,EAAOC;AALT,OAAA,CALK,EAYL,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAI,QAAA,KAAA,EAAJ;AAAA,OAAA,EACGX,KAAAA,CAAAA,GAAAA,CAAU,UAAA,IAAA,EAAA,KAAA,EAAiB;AAC1B,YAAI,CAACF,IAAAA,CAAL,GAAA,EAAe;AACb,gBAAM,IAAA,KAAA,CAAN,+GAAM,CAAN;AACD;;AAED,eAAO,MAAA,CAAA,cAAA,CAAA,IAAA,EAA0BA,IAAAA,CAA1B,GAAA,EAAA,KAAA,EAAP,gBAAO,CAAP;AALDE,OAAAA,CADH,CAZK,EAqBL,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,QAAA,SAAA,EADF,2EAAA;AAEE,QAAA,OAAA,EAAS,SAAA,OAAA,GAAM;AACb,UAAA,MAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,gBAAA;AAHJ,SAAA;AAKE,QAAA,KAAA,EAAOY;AALT,OAAA,CArBK,CAAP;AA6BD;;;;;;AAzKGhC,Q,CAIGC,YAJHD,GAIkB;AACpBE,EAAAA,YAAAA,EADoB,EAAA;AAEpBhB,EAAAA,iBAAAA,EAFoB,CAAA;AAGpBiB,EAAAA,UAAAA,EAHoB,CAAA;AAIpBC,EAAAA,SAAAA,EAJoB,EAAA;AAKpBC,EAAAA,YAAAA,EAAc,SAAA,YAAA,GAAM,CALA,CAAA;AAMpBC,EAAAA,kBAAAA,EAAoB;AANA,CAJlBN;kBA4KSA,Q","sourcesContent":["// @flow\n\nimport React, {\n  Component\n} from 'react';\nimport {\n  range\n} from 'range';\nimport debounce from 'debounce';\n\ntype DirectionType = 'previous' | 'next';\n\ntype ComponentStateType = {|\n  firstVisibleIndex: number,\n  maxWidth: number\n|};\n\n/**\n * Calculates the maximum number of items that can fit the container\n * without overflowing.\n */\nexport const getMaximumAccomodableItemCount = (fullWidth: number, elementWidth: number, elementMargin: number): number => {\n  return Math.floor(fullWidth / (elementWidth + elementMargin));\n};\n\nexport const isPrevButtonVisible = (firstVisibleIndex: number): boolean => {\n  return firstVisibleIndex > 0;\n};\n\nexport const isNextButtonVisible = (totalItems: number, firstVisibleIndex: number, visibleItemCount: number): boolean => {\n  return firstVisibleIndex < totalItems - visibleItemCount;\n};\n\nexport const getIndexToScrollTo = (\n  direction: DirectionType,\n  totalItems: number,\n  visibleItemCount: number,\n  firstVisibleIndex: number,\n  scrollStepDistance: number\n): number => {\n  let index;\n\n  const itemsBeyondVisible = totalItems - firstVisibleIndex - visibleItemCount;\n  const itemsBehindVisible = firstVisibleIndex;\n\n  if (direction === 'next') {\n    index = firstVisibleIndex + (itemsBeyondVisible > scrollStepDistance ? scrollStepDistance : itemsBeyondVisible);\n  } else if (direction === 'previous') {\n    index = firstVisibleIndex - (itemsBehindVisible > scrollStepDistance ? scrollStepDistance : itemsBehindVisible);\n  } else {\n    throw new Error('Unexpected state.');\n  }\n\n  return index;\n};\n\nexport const getVisibleItemCount = (\n  totalItems: number,\n  firstVisibleIndex: number,\n  itemWidth: number,\n  itemMargin: number,\n  controlWidth: number,\n  maxWidth: number\n) => {\n  let availableWidth;\n  let visibleItemCount;\n\n  availableWidth = maxWidth + itemMargin;\n\n  const prevButtonVisible = isPrevButtonVisible(firstVisibleIndex);\n\n  if (prevButtonVisible) {\n    availableWidth -= controlWidth;\n  }\n\n  visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n\n  const nextButtonVisible = isNextButtonVisible(totalItems, firstVisibleIndex, visibleItemCount);\n\n  if (nextButtonVisible) {\n    availableWidth -= controlWidth;\n\n    visibleItemCount = getMaximumAccomodableItemCount(availableWidth, itemWidth, itemMargin);\n  }\n\n  return visibleItemCount;\n};\n\ntype PropsType = {|\n  +children: *,\n  +controlWidth: number,\n  +firstVisibleIndex: number,\n  +itemMargin: number,\n  +itemWidth: number,\n  +onItemScroll: (index: number) => void,\n  +scrollStepDistance: number,\n  +style: {\n    [key: string]: string\n  }\n|};\n\nclass Carousel extends Component<PropsType, ComponentStateType> {\n  resizeEventListener: () => void;\n  wrapperElement: HTMLElement;\n\n  static defaultProps = {\n    controlWidth: 30,\n    firstVisibleIndex: 0,\n    itemMargin: 0,\n    itemWidth: 50,\n    onItemScroll: () => {},\n    scrollStepDistance: null\n  };\n\n  constructor (props: PropsType) {\n    super(props);\n\n    this.state = {\n      firstVisibleIndex: props.firstVisibleIndex || 0,\n      maxWidth: 0\n    };\n\n    this.resizeEventListener = debounce(() => {\n      this.setState({\n        maxWidth: this.wrapperElement.offsetWidth\n      });\n    }, 100);\n  }\n\n  componentDidMount () {\n    if (!this.wrapperElement) {\n      throw new Error('Unexpected state.');\n    }\n\n    const maxWidth = this.wrapperElement.offsetWidth;\n\n    this.setState({\n      maxWidth\n    });\n\n    window.addEventListener('resize', this.resizeEventListener);\n  }\n\n  componentWillUnmount () {\n    this.resizeEventListener.clear();\n\n    window.removeEventListener('resize', this.resizeEventListener);\n  }\n\n  handleScrollToDirection = (direction: DirectionType, visibleItemCount: number): void => {\n    const index = getIndexToScrollTo(\n      direction,\n      this.props.children.length,\n      visibleItemCount,\n      this.state.firstVisibleIndex,\n      this.props.scrollStepDistance || visibleItemCount\n    );\n\n    this.props.onItemScroll(index);\n\n    this.setState({\n      firstVisibleIndex: index\n    });\n  };\n\n  getItemElement = (item: React$Element<any>, key: string, index: number, visibleItemCount: number): React$Element<any> | null => {\n    const visibleItemIndeces = range(this.state.firstVisibleIndex, visibleItemCount + this.state.firstVisibleIndex);\n    const isVisible = visibleItemIndeces.includes(index);\n    const isLastAmongVisible = visibleItemIndeces.length === visibleItemIndeces.indexOf(index) + 1;\n\n    if (!isVisible) {\n      return null;\n    }\n\n    return <li\n      key={key}\n      style={{\n        boxSizing: 'border-box',\n        display: 'flex',\n        listStyleType: 'none',\n        marginRight: isLastAmongVisible ? 0 : this.props.itemMargin,\n        width: this.props.itemWidth\n      }}\n    >\n      {item}\n    </li>;\n  };\n\n  captureWrapperElementReference = (element: *) => {\n    if (element) {\n      this.wrapperElement = element;\n    }\n  };\n\n  render () {\n    const {\n      controlWidth,\n      itemMargin,\n      children,\n      itemWidth\n    } = this.props;\n    const items = children;\n    const itemCount = items.length;\n    const visibleItemCount = getVisibleItemCount(itemCount, this.state.firstVisibleIndex, itemWidth, itemMargin, controlWidth, this.state.maxWidth);\n    const prevButtonVisible = visibleItemCount === 0 ? false : isPrevButtonVisible(this.state.firstVisibleIndex);\n    const nextButtonVisible = visibleItemCount === 0 ? false : isNextButtonVisible(itemCount, this.state.firstVisibleIndex, visibleItemCount);\n\n    const carouselStyle = {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexFlow: 'row wrap',\n      flexGrow: 1,\n      overflow: 'hidden',\n      ...this.props.style\n    };\n\n    const navigationButtonStyle = {\n      boxSizing: 'border-box',\n      height: 'inherit',\n      margin: 0,\n      padding: 0,\n      width: controlWidth\n    };\n\n    const navigationButtonPreviousStyle = {\n      ...navigationButtonStyle,\n      display: prevButtonVisible ? 'flex' : 'none'\n    };\n\n    const navigationButtonNextStyle = {\n      ...navigationButtonStyle,\n      display: nextButtonVisible ? 'flex' : 'none'\n    };\n\n    const bodyStyle = {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      margin: 0,\n      padding: 0\n    };\n\n    return <div\n      className='react-carousel'\n      ref={this.captureWrapperElementReference}\n      style={carouselStyle}\n    >\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--previous'\n        onClick={() => {\n          this.handleScrollToDirection('previous', visibleItemCount);\n        }}\n        style={navigationButtonPreviousStyle}\n      />\n      <ul style={bodyStyle}>\n        {items.map((item, index) => {\n          if (!item.key) {\n            throw new Error('react-carousel children must have a \"key\" property. https://facebook.github.io/react/docs/lists-and-keys.html');\n          }\n\n          return this.getItemElement(item, item.key, index, visibleItemCount);\n        })}\n      </ul>\n      <div\n        className='react-carousel__navigation-button react-carousel__navigation-button--next'\n        onClick={() => {\n          this.handleScrollToDirection('next', visibleItemCount);\n        }}\n        style={navigationButtonNextStyle}\n      />\n    </div>;\n  }\n}\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"script"}